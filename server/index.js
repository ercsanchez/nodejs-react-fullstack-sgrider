// CommonJS Modules
const express = require('express');
const mongoose = require('mongoose');
const cookieSession = require('cookie-session');
const passport = require('passport');
const bodyParser = require('body-parser');
const keys = require('./config/keys');
require('./models/User'); // models must be loaded before passport
require('./services/passport'); // require executes ./services/passport file, w/c doesn't return anything

// connect to mongodb database/cluster
mongoose.connect(keys.mongoURI);

const app = express();

app.use(bodyParser.json());

// store token generated by passport into a cookie
app.use(
  cookieSession({
    maxAge: 30 * 24 * 60 * 60 * 1000, // 30 days in milliseconds
    keys: [keys.cookieKey], // key used to encrypt cookie
  })
);

// tell passport to use cookies to handle authentication
app.use(passport.initialize());
app.use(passport.session());

// require executes ./routes/authRoutes file, w/c returns a function
// then the function is executed, where app is passed as an arg
require('./routes/authRoutes')(app);
require('./routes/billingRoutes')(app);

if (process.env.NODE_ENV === 'production') {
  // Express will serve up production assets (/client/build/static/ files), e.g. main.js, main.css, etc.
  // .static is middleware to determine location of the js and css file
  // express determines the location based on the script and style tags in the index.html
  // order of operations matters, as express will try to match location of static file first (index.html is outside static dir)
  app.use(express.static('client/build'));

  // Express will serve up index.html file if it doesn't recognize the route
  // catch-all case
  const path = require('path');
  app.get('*', (req, res) => {
    res.sendFile(path.resolve(__dirname, 'client', 'build', 'index.html'));
  });
}

const PORT = process.env.PORT || 5000;
app.listen(PORT);
